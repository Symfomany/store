###
# Begin
###
security:


###
# 1. Encoders
###
# http://symfony.com/doc/current/book/security.html#encoding-the-user-s-password
#    encoders:
#        Symfony\Component\Security\Core\User\User: plaintext
    encoders:
      Store\BackendBundle\Entity\Jeweler:
        algorithm:   sha512
        iterations: 10 #Minima pour le sha512 afin qu'il soit performant
        encode_as_base64: true #encodage en plus en base 64 base64() pour améliorer l'algorythme
#      Symfony\Component\Security\Core\User\User: sha1


###
# 2. Define all roles or users for Authorisation
###
    # http://symfony.com/doc/current/book/security.html#hierarchical-roles
    role_hierarchy:
        ROLE_JEWELER:      [ROLE_JEWELER, ROLE_EDITOR, ROLE_COMMERCIAL]
        ROLE_USER:         [ROLE_USER, ROLE_JEWELER]
        ROLE_ADMIN:        [ROLE_ADMIN, ROLE_USER]


###
# 3.
###
    # http://symfony.com/doc/current/book/security.html#where-do-users-come-from-user-providers
    providers:
#      chain_provider:
#         chain:
#            providers: [in_memory, store_backend]
#      in_memory:
#                memory:
#                    users:
#                        superadmin@gmail.com: { password: d033e22ae348aeb5660fc2140aec35850c4da997, roles: [ 'ROLE_JEWELER' ] }
      store_backend:
          entity: { class: StoreBackendBundle:Jeweler }

#      oauth_provider:
#          id: store.backend.oauthprovider



###
# 4. Define firewalls for areas of my app
###
    firewalls:
        # secures part of the application
        store_backend:
            pattern:    ^/administration
            wsse:      {lifetime: 6000}
            #cookie: encrypter le contenu du cookie
            remember_me:
                key:      "%secret%"
                lifetime: 31536000 # 365 jours en secondes
                path:     /
                domain:   ~ # Prend la valeur par défaut du domaine courant depuis $_SERVER
            form_login:
                check_path: store_backend_security_login_check
                login_path: store_backend_security_login
                target_path_parameter: store_backend_index #use parameter in config form
                default_target_path:  /administration
            logout:
                path:   store_backend_security_logout
                target: /login
#            oauth:
#                resource_owners:
#                  facebook:           "/administration/check-facebook"
#                login_path:        /hwio-login
#                check_path:        /administration/login-check
#                use_forward:       false
#                failure_path:      /login
#                oauth_user_provider:
#                  service: store.backend.oauthprovider





###
# 5. Define all access control between firewall & roles
###

    # with these settings you can restrict or allow access for different parts
    # of your application based on roles, ip, host or methods
    # http://symfony.com/doc/current/cookbook/security/access_control.html
    access_control:
#        - { path: ^/hwio-login, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/administration, roles: [ROLE_JEWELER] }