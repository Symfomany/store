# you can read more about security in the related section of the documentation
# http://symfony.com/doc/current/book/security.html
security:
    # http://symfony.com/doc/current/book/security.html#encoding-the-user-s-password
#    encoders:
#        Symfony\Component\Security\Core\User\User: plaintext

    encoders:
      Store\BackendBundle\Entity\Jeweler:
        algorithm:   sha512
        iterations: 10
        encode_as_base64: true

    # http://symfony.com/doc/current/book/security.html#hierarchical-roles
    role_hierarchy:
        ROLE_USER:       ROLE_USER
        ROLE_ADMIN:       [ROLE_ADMIN, ROLE_USER]
        ROLE_SUPER_ADMIN: [ROLE_USER, ROLE_ADMIN, ROLE_ALLOWED_TO_SWITCH]

    # http://symfony.com/doc/current/book/security.html#where-do-users-come-from-user-providers
    providers:
       backend:
          entity: { class: StoreBackendBundle:Jeweler }

#        in_memory:
#            memory:
#                users:
#                    admin@gmail.com: { password: d033e22ae348aeb5660fc2140aec35850c4da997, roles: [ 'ROLE_ADMIN' ] }



    # the main part of the security, where you can set up firewalls
    # for specific sections of your app
    firewalls:
        # disables authentication for assets and the profiler, adapt it according to your needs
        dev:
            pattern:  ^/(_(profiler|wdt)|css|images|js)/
            security: false
        # the login page has to be accessible for everybody
        login:
            pattern:  ^/login$
            security: false

        # secures part of the application
        backend:
            pattern:    ^/administration
            form_login:
                check_path: store_backend_login_check
                login_path: store_backend_login
                remember_me: true
                target_path_parameter:          store_backend_index
                default_target_path:  /administration
            logout:
                path:   store_backend_logout
                target: /login
            #anonymous: ~
            #http_basic:
            #    realm: "Secured Demo Area"

    # with these settings you can restrict or allow access for different parts
    # of your application based on roles, ip, host or methods
    # http://symfony.com/doc/current/cookbook/security/access_control.html
    access_control:
        - { path: ^/login, roles: IS_AUTHENTICATED_ANONYMOUSLY, requires_channel: https }
        - { path: ^/administration, roles: ROLE_ADMIN }