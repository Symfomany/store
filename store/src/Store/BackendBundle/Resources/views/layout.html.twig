{% extends "::base.html.twig" %}

{% block classname %}theme-default main-menu-animated{% endblock %}

{# Stylesheets #}
{% block stylesheets %}
  {{ parent() }}
  <link href="{{ asset('assets/backend/stylesheets/pixel-admin.min.css') }}" rel="stylesheet" type="text/css">
  <link href="{{ asset('assets/backend/stylesheets/widgets.min.css') }}" rel="stylesheet" type="text/css">
  <link href="{{ asset('assets/backend/stylesheets/rtl.min.css') }} " rel="stylesheet" type="text/css">
  <link href="{{ asset('assets/backend/stylesheets/themes.min.css') }}" rel="stylesheet" type="text/css">
    {% stylesheets 'assets/backend/stylesheets/main.css' filter='uglifycss'  %}
        <link rel="stylesheet" href="{{ asset_url }}" />
    {% endstylesheets %}
{% endblock %}

{% block body %}

    {#ini.push() tableau pour pousser tout le jquery#}
    <script>var init = [];</script>

    <div id="main-wrapper">

        {# SI l'utilisateur est connecté #}


        {# L'utilisateur est accessible depuis Twig #}
        {% if app.user.id is defined %}
            {# Inclusion de ma vue partielle main naviguation#}
            {{ include('StoreBackendBundle:Partial:main_navigation.html.twig') }}
        {% endif %}

        {% if app.user.id is defined %}
            {# Inclusion de ma vue partielle main menu #}
            {{ include('StoreBackendBundle:Partial:main_menu.html.twig') }}
        {% endif %}

        <div id="content-wrapper">

            {# J'inclus ma vue des messages flashs #}
            {{ include('StoreBackendBundle:Partial:flashdatas.html.twig') }}

            {#Titre de la page#}
            <div class="page-header">

                <div class="row">
                    <!-- Page header, center on small screens -->
                    <h1 class="col-xs-12 col-sm-4 text-center text-left-sm">
                        {% block titlepage %} {% endblock %}</h1>
                </div>
            </div> <!-- / .page-header -->


            {# Le block où vont ecrire nos vues filles #}
            {% block content %}
            {% endblock %}
        </div> <!--fermeture content-wrapper -->

        <div id="main-menu-bg"></div>

    </div> <!-- fermeture main-wrapper -->


{% endblock %}


{#Javascript files#}
{% block javascripts %}
    {{ parent() }}
    <script src="{{ asset('assets/backend/javascripts/pixel-admin.min.js') }}"></script>
    <script src="http://cdnjs.cloudflare.com/ajax/libs/hinclude/0.9.5/hinclude.min.js"></script>


    {#<script src="http://autobahn.s3.amazonaws.com/js/autobahn.min.js"></script>#}
    {#<script>#}
{#//        var conn = new ab.Session('ws://localhost:8080',#}
{#//                function() {#}
{#//                    conn.subscribe('Pressing', function(topic, data) {#}
{#//                        // This is where you would add the new article to the DOM (beyond the scope of this tutorial)#}
{#//                        console.log('New article published to category "' + topic + '" : ' + data.title + ' : ' + data.category);#}
{#//                    });#}
{#//                },#}
{#//                function() {#}
{#//                    console.warn('WebSocket connection closed');#}
{#//                },#}
{#//                {'skipSubprotocolCheck': true}#}
{#//        );#}
    {#</script>#}

    <script type="text/javascript">
        init.push(function () {

            $('form').on("submit", function (event) {
                $(this).find('button:last').attr('disabled', 'disabled');
                $(this).find('button:last').text('Envoi en cours...');
            });

            $("select").select2();
            $("input[type='date']").attr('type','text').mask("99/99/9999");
            $('input[type="file"]').pixelFileInput({ placeholder: 'Aucun fichier...' });
            $('div.alert-success').delay(3000).slideUp('slow');
        });
        window.PixelAdmin.start(init);

        /*
        var conn = new WebSocket('ws://localhost:8080');
        conn.onopen = function(e) {
            console.log("Connection established!");
        };

        conn.onmessage = function(e) {
            console.log(e.data);
        };

        send('lala');

        function send(message) {
            waitForSocketConnection(conn, function() {
                conn.send(message);
            });
        };


        function waitForSocketConnection(socket, callback){
            setTimeout(
                    function(){
                        if (socket.readyState === 1) {
                            if(callback !== undefined){
                                callback();
                            }
                            return;
                        } else {
                            waitForSocketConnection(socket,callback);
                        }
                    }, 5);
        };*/




    </script>
{% endblock%}