<?php

namespace Store\BackendBundle\Repository;

use Doctrine\ORM\EntityRepository;

/**
 * VillesRepository.
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class VillesRepository extends EntityRepository
{
    /**
     * Slugify.
     *
     * @param null $ville
     *
     * @return mixed
     */
    protected function slugify($ville = null)
    {

        # 2 tableaux avec accents
        $a = array('À','Á','Â','Ã','Ä','Å','Æ','Ç','È','É','Ê','Ë','Ì','Í','Î','Ï','Ð','Ñ','Ò','Ó','Ô','Õ','Ö','Ø','Ù','Ú','Û','Ü','Ý','ß','à','á','â','ã','ä','å','æ','ç','è','é','ê','ë','ì','í','î','ï','ñ','ò','ó','ô','õ','ö','ø','ù','ú','û','ü','ý','ÿ','A','a','A','a','A','a','C','c','C','c','C','c','C','c','D','d','Ð','d','E','e','E','e','E','e','E','e','E','e','G','g','G','g','G','g','G','g','H','h','H','h','I','i','I','i','I','i','I','i','I','i','?','?','J','j','K','k','L','l','L','l','L','l','?','?','L','l','N','n','N','n','N','n','?','O','o','O','o','O','o','Œ','œ','R','r','R','r','R','r','S','s','S','s','S','s','Š','š','T','t','T','t','T','t','U','u','U','u','U','u','U','u','U','u','U','u','W','w','Y','y','Ÿ','Z','z','Z','z','Ž','ž','?','ƒ','O','o','U','u','A','a','I','i','O','o','U','u','U','u','U','u','U','u','U','u','?','?','?','?','?','?');
        $b = array('A','A','A','A','A','A','AE','C','E','E','E','E','I','I','I','I','D','N','O','O','O','O','O','O','U','U','U','U','Y','s','a','a','a','a','a','a','ae','c','e','e','e','e','i','i','i','i','n','o','o','o','o','o','o','u','u','u','u','y','y','A','a','A','a','A','a','C','c','C','c','C','c','C','c','D','d','D','d','E','e','E','e','E','e','E','e','E','e','G','g','G','g','G','g','G','g','H','h','H','h','I','i','I','i','I','i','I','i','I','i','IJ','ij','J','j','K','k','L','l','L','l','L','l','L','l','l','l','N','n','N','n','N','n','n','O','o','O','o','O','o','OE','oe','R','r','R','r','R','r','S','s','S','s','S','s','S','s','T','t','T','t','T','t','U','u','U','u','U','u','U','u','U','u','U','u','W','w','Y','y','Y','Z','z','Z','z','Z','z','s','f','O','o','U','u','A','a','I','i','O','o','U','u','U','u','U','u','U','u','U','u','A','a','AE','ae','O','o');

        // slugifier mon titre stocké dans une variable slug
        $ville = strtoupper(preg_replace(array('/[^a-zA-Z0-9 -]/', '/[ -]+/', '/^-|-$/'), array('', '-', ''), str_replace($a, $b, $ville)));

        return $ville;
    }
    /**
     * Get city.
     *
     * @param null $ville
     * @param null $limit
     *
     * @return mixed
     */
    public function getCity($ville = null,  $limit = null, $cp = null)
    {
        $ville = $this->slugify($ville);

        if (!$cp) {
            $query = $this->getEntityManager()
                ->createQuery(
                    '
                 SELECT v.nom
                 FROM StoreBackendBundle:Villes v
                 WHERE v.maj LIKE :ville'
                )
                ->setParameter('ville', '%'.$ville.'%')
                ->setMaxResults($limit);
        } else {
            $query = $this->getEntityManager()
                ->createQuery(
                    '
                 SELECT v.cp
                 FROM StoreBackendBundle:Villes v
                 WHERE v.cp LIKE :cp'
                )
                ->setParameter('cp', $cp.'%')
                ->setMaxResults($limit);
        }

        return $query->getScalarResult();
    }
    /**
     * Get city.
     *
     * @param null $ville
     * @param null $limit
     *
     * @return mixed
     */
    public function getCordonneesByCity($ville = null)
    {
        $ville = $this->slugify($ville);

        $query = $this->getEntityManager()
                ->createQuery(
                    '
                 SELECT v.longitude,v.latitude
                 FROM StoreBackendBundle:Villes v
                 WHERE v.maj = :ville
                 OR v.cp = :ville'
                )
                ->setParameter('ville',  $ville)
                ->setMaxResults(1);

        return $query->getOneOrNullResult();
    }
}
